/** @file: ConFlags.hpp
	@author Erik Fryscok
	@date 2016-02-05
	@brief Contains all flags used in ConApi
	@details Defines enums for the Windows console api pre-processor defined macro flags
	@note Project 2 - Singleton (INFO-5100 - Patterns in Software 2)
	*/

#pragma once
#include <Windows.h>

namespace ConFlags {
	enum Attributes {
		BLACK = 0,
		FORE_BLUE = FOREGROUND_BLUE,
		FORE_GREEN = FOREGROUND_GREEN,
		FORE_CYAN = FOREGROUND_GREEN | FOREGROUND_BLUE,
		FORE_RED = FOREGROUND_RED,
		FORE_MAGENTA = FOREGROUND_RED | FOREGROUND_BLUE,
		FORE_YELLOW = FOREGROUND_RED | FOREGROUND_GREEN,
		FORE_GREY = FOREGROUND_RED | FOREGROUND_GREEN | FOREGROUND_BLUE,
		FORE_INTENSITY = FOREGROUND_INTENSITY,
		FORE_LIGHT_BLUE = FOREGROUND_BLUE | FOREGROUND_INTENSITY,
		FORE_LIGHT_GREEN = FOREGROUND_GREEN | FOREGROUND_INTENSITY,
		FORE_LIGHT_CYAN = FOREGROUND_GREEN | FOREGROUND_BLUE | FOREGROUND_INTENSITY,
		FORE_LIGHT_RED = FOREGROUND_RED | FOREGROUND_INTENSITY,
		FORE_LIGHT_MAGENTA = FOREGROUND_RED | FOREGROUND_BLUE | FOREGROUND_INTENSITY,
		FORE_LIGHT_YELLOW = FOREGROUND_RED | FOREGROUND_GREEN | FOREGROUND_INTENSITY,
		FORE_WHITE = FOREGROUND_RED | FOREGROUND_GREEN | FOREGROUND_BLUE | FOREGROUND_INTENSITY,
		BACK_BLUE = BACKGROUND_BLUE,
		BACK_GREEN = BACKGROUND_GREEN,
		BACK_CYAN = BACKGROUND_GREEN | BACKGROUND_BLUE,
		BACK_RED = BACKGROUND_RED,
		BACK_MAGENTA = BACKGROUND_RED | BACKGROUND_BLUE,
		BACK_YELLOW = BACKGROUND_RED | BACKGROUND_GREEN,
		BACK_GREY = BACKGROUND_RED | BACKGROUND_GREEN | BACKGROUND_BLUE,
		BACK_INTENSITY = BACKGROUND_INTENSITY,
		BACK_LIGHT_BLUE = BACKGROUND_BLUE | BACKGROUND_INTENSITY,
		BACK_LIGHT_GREEN = BACKGROUND_GREEN | BACKGROUND_INTENSITY,
		BACK_LIGHT_CYAN = BACKGROUND_GREEN | BACKGROUND_BLUE | BACKGROUND_INTENSITY,
		BACK_LIGHT_RED = BACKGROUND_RED | BACKGROUND_INTENSITY,
		BACK_LIGHT_MAGENTA = BACKGROUND_RED | BACKGROUND_BLUE | BACKGROUND_INTENSITY,
		BACK_LIGHT_YELLOW = BACKGROUND_RED | BACKGROUND_GREEN | BACKGROUND_INTENSITY,
		BACK_WHITE = BACKGROUND_RED | BACKGROUND_GREEN | BACKGROUND_BLUE | BACKGROUND_INTENSITY,
	};

	enum InputMode {
		KEYBOARD_INPUT = ENABLE_PROCESSED_INPUT,
		LINE_INPUT = ENABLE_LINE_INPUT,
		ECHO_INPUT = ENABLE_ECHO_INPUT,
		WINDOW_INPUT = ENABLE_WINDOW_INPUT,
		MOUSE_INPUT = ENABLE_MOUSE_INPUT,
		INSERT_MODE = ENABLE_INSERT_MODE,
		QUICK_EDIT_MODE = ENABLE_QUICK_EDIT_MODE,
		EXTENDED_FLAGS = ENABLE_EXTENDED_FLAGS,
		AUTO_POSITION = ENABLE_AUTO_POSITION
	};

	enum EventType {
		KEY = KEY_EVENT,
		MOUSE = MOUSE_EVENT,
		WINDOW_BUFFER_SIZE = WINDOW_BUFFER_SIZE_EVENT,
		MENU = MENU_EVENT,
		FOCUS = FOCUS_EVENT
	};

	enum EventFlags {
		MOVED = MOUSE_MOVED,
		DOUBLE_CLICKED = DOUBLE_CLICK,
		WHEELED = MOUSE_WHEELED,
		HWHEELED = MOUSE_HWHEELED
	};

	enum ButtonState {
		FROM_LEFT_1ST_BUTTON = FROM_LEFT_1ST_BUTTON_PRESSED,
		RIGHTMOST_BUTTON = RIGHTMOST_BUTTON_PRESSED,
		FROM_LEFT_2ND_BUTTON = FROM_LEFT_2ND_BUTTON_PRESSED,
		FROM_LEFT_3RD_BUTTON = FROM_LEFT_3RD_BUTTON_PRESSED,
		FROM_LEFT_4TH_BUTTON = FROM_LEFT_4TH_BUTTON_PRESSED
	};

	enum CtrlEvent {
		CTRL_C = CTRL_C_EVENT,
		CTRL_BREAK = CTRL_BREAK_EVENT,
		CTRL_CLOSE = CTRL_CLOSE_EVENT,
		CTRL_LOGOFF = CTRL_LOGOFF_EVENT,
		CTRL_SHUTDOWN = CTRL_SHUTDOWN_EVENT
	};
}